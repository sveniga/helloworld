
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-devx-myapp
  name: myapp
  namespace: devx
spec:
  replicas: 1
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-devx-myapp
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-devx-myapp
    spec:
      containers:
      - image: sveniga/mynewimage:$BUILD_NUMBER
        imagePullPolicy: Always
        name: myapp
        ports:
        - containerPort: 80
          name: 80tcp803
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    field.cattle.io/publicEndpoints: '[{"addresses":["ec2-54-236-219-96.compute-1.amazonaws.com"],"port":80,"protocol":"TCP","serviceName":"devx:myapp-loadbalancer","allNodes":false}]'
    field.cattle.io/targetWorkloadIds: '["deployment:devx:myapp"]'
    workload.cattle.io/targetWorkloadIdNoop: "true"
    workload.cattle.io/workloadPortBased: "true"
  labels:
    cattle.io/creator: norman
  name: myapp-loadbalancer
  namespace: devx
  ownerReferences:
  - apiVersion: apps/v1beta2
    controller: true
    kind: deployment
    name: myapp
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: 80tcp803
    nodePort: 31005
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    workload.user.cattle.io/workloadselector: deployment-devx-myapp
  sessionAffinity: None
  type: LoadBalancer

